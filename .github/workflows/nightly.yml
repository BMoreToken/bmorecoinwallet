name: Stable Nightly Build

on:
  push:
    branches:
      - "main"
    tags-ignore:
      - "*" # We don't want this to run on release
  pull_request:

jobs:
  build-appimage:
    name: AppImage
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt update -y
          sudo apt install -y qt5-default qttools5-dev qttools5-dev-tools libqt5charts5-dev libboost1.65-all-dev
        
          

      - name: Clone bmorecoin
        run: |
          rm -rf cryptonote
          git clone https://github.com/BMoreToken/bmorecoin.git cryptonote

      - name: Build
        id: build
        run: |
          ccx_version=${GITHUB_SHA::7}

          make -j2 build-release

          echo "::set-output name=ccx_version::$ccx_version"

      - name: Create AppImage
        id: appimage
        run: |
          ccx_version="${{steps.build.outputs.ccx_version}}"
          appimage_name=BMoreCoin_Desktop-dev-"$ccx_version"-x86_64.AppImage

          cd appimage
          chmod +x create-appimage.sh
          ./create-appimage.sh
          mv BMoreCoin_Desktop*.AppImage ../$appimage_name
          cd ..
          ls -l $appimage_name

          echo "::set-output name=artifact_name::${appimage_name}"

      - name: Upload To GH Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.appimage.outputs.artifact_name }}
          path: ${{ steps.appimage.outputs.artifact_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-ubuntu18:
    name: Ubuntu 18.04
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt update -y
          sudo apt install -y qt5-default qttools5-dev qttools5-dev-tools libqt5charts5-dev libboost1.65-all-dev
          

      - name: Clone bmorecoin
        run: |
          rm -rf cryptonote
          git clone https://github.com/BMoreToken/bmorecoin.git cryptonote

      - name: Build
        id: build
        run: |
          ccx_version=${GITHUB_SHA::7}
          release_name=ccx-desktop-ubuntu-1804-dev-"$ccx_version"

          make -j2 build-release
          mkdir $release_name
          mv build/release/bmorecoin $release_name
 
          tar -czf "$release_name".tar.gz "$release_name"

          echo "::set-output name=release_name::${release_name}"
          echo "::set-output name=artifact_path::$release_name.tar.gz"

      - name: Upload To GH Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.build.outputs.release_name }}
          path: ${{ steps.build.outputs.artifact_path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-ubuntu20:
    name: Ubuntu 20.04
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt update -y
          sudo apt install -y qt5-default qttools5-dev qttools5-dev-tools libqt5charts5-dev libboost1.67-all-dev
          

      - name: Clone bmorecoin
        run: |
          rm -rf cryptonote
          git clone https://github.com/BMoreToken/bmorecoin.git cryptonote

      - name: Build
        id: build
        run: |
          ccx_version=${GITHUB_SHA::7}
          release_name=ccx-desktop-ubuntu-2004-dev-"$ccx_version"

          make -j2 build-release
          mkdir $release_name
          
          mv build/release/bmorecoin $release_name
          tar -czf "$release_name".tar.gz "$release_name"

          echo "::set-output name=release_name::${release_name}"
          echo "::set-output name=artifact_path::$release_name.tar.gz"

      - name: Upload To GH Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.build.outputs.release_name }}
          path: ${{ steps.build.outputs.artifact_path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos:
    name: macOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

     
      - name: Install dependencies
        run: |
          wget https://boostorg.jfrog.io/artifactory/main/release/1.64.0/source/boost_1_64_0.tar.gz
          tar -xzf boost_1_64_0.tar.gz
          cd boost_1_64_0
          ./bootstrap.sh --prefix=/usr/local
          ./b2 --reconfigure boost.locale.icu=on
          ./b2 install
     
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          modules: "qtcharts"

     
     
      - name: Clone bmorecoin
        run: |
          rm -rf cryptonote
          git clone https://github.com/BMoreToken/bmorecoin.git cryptonote
      - name: Build
        id: build
        run: |
          build_folder="build/release"
          ccx_version=$(echo ${{ github.ref }} | sed 's|refs/tags/||')
          release_name="ccx-desktop-macOS-v$ccx_version"
          app_name="bmorecoin.app"
          make -j4 build-release
          cd "$build_folder"
          macdeployqt "$app_name"
          cpack
          mkdir "$release_name"
          mv *.dmg "$release_name".dmg
          zip "$release_name".zip "$release_name".dmg
          sha256=$(shasum -a 256 "$release_name".zip | awk '{ print toupper($1) }')
          echo "::set-output name=sha256::${sha256}"
          echo "::set-output name=release_name::${release_name}.zip"
          echo "::set-output name=asset_path::$build_folder/$release_name.zip"
          echo "::set-output name=ccx_version::${ccx_version}"
 
