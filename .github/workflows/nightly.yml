name: Stable Nightly Build

on:
  push:
    branches:
      - "main"
    tags-ignore:
      - "*" # We don't want this to run on release
  pull_request:

jobs:
  build-windows:
    name: Windows
    runs-on: windows-2019
    env:
      BOOST_ROOT: C:/tools/boost/x86_64
    steps:
      - uses: actions/checkout@v2

      - name: Setup msbuild
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Install Boost
        shell: powershell
        run: |
          echo "${env:BOOST_ROOT}"
          $Url = "https://sourceforge.net/projects/boost/files/boost-binaries/1.72.0/boost_1_72_0-msvc-14.2-64.exe"
          (New-Object System.Net.WebClient).DownloadFile($Url, "$env:TEMP\boost.exe")
          Start-Process -Wait -FilePath "$env:TEMP\boost.exe" "/SILENT","/SP-","/SUPPRESSMSGBOXES","/DIR=${env:BOOST_ROOT}"
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          host: "windows"
          target: "desktop"
          modules: "qttools5 qtcharts"
          install-deps: "true"

      - name: Clone bmorecoin-core
        shell: powershell
        run: |
          Remove-Item cryptonote -Recurse -Force -ErrorAction Ignore
          git clone https://github.com/BMoreToken/bmorecoin cryptonote
      - name: Pre-build setup
        shell: powershell
        run: |
          $search = "set\(CN_VERSION "
          $ccx_version = ((Get-Content CryptoNoteWallet.cmake | Select-String $search) | %{$_ -replace $search, ""}) | %{$_ -replace "\)", ""}
          # Update "CMakeLists.txt" with cmake dir
          $qt5_cmake = "${{ env.Qt5_Dir }}/lib/cmake" -replace '[/]', '\\'
          $file = "CMakeLists.txt"
          $find = '^set\(CMAKE_PREFIX_PATH.+'
          $replace = "set(CMAKE_PREFIX_PATH `"$($qt5_cmake)`")"
          (Get-Content $file) | %{$_ -replace $find, $replace} | Set-Content $file
          # Update installer/windows/installer.iss with the current version
          $file = "installer/windows/installer.iss"
          $find = "^#define AppVersion.+"
          $replace = "#define AppVersion '$ccx_version'"
          (Get-Content $file) | %{$_ -replace $find, $replace} | Set-Content $file
      - name: Build
        shell: powershell
        id: build
        run: |
          $build_folder = "build"
          $release_folder = "Release"
          $ccx_version = "${{ github.ref }}" -replace 'refs/tags/'
          $release_name = "ccx-desktop-win64-v$ccx_version"
          New-Item "$build_folder\$release_folder" -ItemType Directory
          cd "$build_folder"
          cmake -G "Visual Studio 16 2019" ..
          msbuild bmorecoin.sln /p:Configuration=Release /m:2
          echo "::set-output name=build_folder::${build_folder}"
          echo "::set-output name=release_folder::${release_folder}"
          echo "::set-output name=release_name::${release_name}"
          echo "::set-output name=ccx_version::${ccx_version}"
      - name: Pack
        shell: powershell
        id: pack
        run: |
          $build_folder = "${{ steps.build.outputs.build_folder }}"
          $release_name = "${{ steps.build.outputs.release_name }}"
          $release_folder = "${{ steps.build.outputs.release_folder }}"
          cd "$build_folder/$release_folder"
          mkdir "Final"
          choco install openssl -y
          cp "C:\Program Files\OpenSSL-Win64\libcrypto*.dll" "Final/"
          cp "C:\Program Files\OpenSSL-Win64\libssl*.dll" "Final/"
          windeployqt --release bmorecoin.exe --dir "Final/" --no-translations --no-opengl-sw
          mv Final ../../installer/windows/build
          mv bmorecoin.exe ../../installer/windows/build/
          cd ../../installer/windows/
          iscc installer.iss
          cd bin
          Compress-Archive -Path Bmorecoin*.exe -DestinationPath "$release_name.zip"
          $sha256 = (Get-FileHash "$release_name.zip").Hash
          $asset_path = "installer/windows/bin/$release_name.zip"
          echo "::set-output name=sha256::${sha256}"
          echo "::set-output name=release_name::${release_name}.zip"
          echo "::set-output name=asset_path::${asset_path}" 
          

  build-appimage:
    name: AppImage
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt update -y
          sudo apt install -y qt5-default qttools5-dev qttools5-dev-tools libqt5charts5-dev libboost1.65-all-dev
        
          

      - name: Clone bmorecoin
        run: |
          rm -rf cryptonote
          git clone https://github.com/BMoreToken/bmorecoin.git cryptonote

      - name: Build
        id: build
        run: |
          ccx_version=${GITHUB_SHA::7}

          make -j2 build-release

          echo "::set-output name=ccx_version::$ccx_version"

      - name: Create AppImage
        id: appimage
        run: |
          ccx_version="${{steps.build.outputs.ccx_version}}"
          appimage_name=BMoreCoin_Desktop-dev-"$ccx_version"-x86_64.AppImage

          cd appimage
          chmod +x create-appimage.sh
          ./create-appimage.sh
          mv BMoreCoin_Desktop*.AppImage ../$appimage_name
          cd ..
          ls -l $appimage_name

          echo "::set-output name=artifact_name::${appimage_name}"

      - name: Upload To GH Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.appimage.outputs.artifact_name }}
          path: ${{ steps.appimage.outputs.artifact_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-ubuntu18:
    name: Ubuntu 18.04
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt update -y
          sudo apt install -y qt5-default qttools5-dev qttools5-dev-tools libqt5charts5-dev libboost1.65-all-dev
          

      - name: Clone bmorecoin
        run: |
          rm -rf cryptonote
          git clone https://github.com/BMoreToken/bmorecoin.git cryptonote

      - name: Build
        id: build
        run: |
          ccx_version=${GITHUB_SHA::7}
          release_name=ccx-desktop-ubuntu-1804-dev-"$ccx_version"

          make -j2 build-release
          mkdir $release_name
          mv build/release/bmorecoin $release_name
 
          tar -czf "$release_name".tar.gz "$release_name"

          echo "::set-output name=release_name::${release_name}"
          echo "::set-output name=artifact_path::$release_name.tar.gz"

      - name: Upload To GH Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.build.outputs.release_name }}
          path: ${{ steps.build.outputs.artifact_path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-ubuntu20:
    name: Ubuntu 20.04
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt update -y
          sudo apt install -y qt5-default qttools5-dev qttools5-dev-tools libqt5charts5-dev libboost1.67-all-dev
          

      - name: Clone bmorecoin
        run: |
          rm -rf cryptonote
          git clone https://github.com/BMoreToken/bmorecoin.git cryptonote

      - name: Build
        id: build
        run: |
          ccx_version=${GITHUB_SHA::7}
          release_name=ccx-desktop-ubuntu-2004-dev-"$ccx_version"

          make -j2 build-release
          mkdir $release_name
          
          mv build/release/bmorecoin $release_name
          tar -czf "$release_name".tar.gz "$release_name"

          echo "::set-output name=release_name::${release_name}"
          echo "::set-output name=artifact_path::$release_name.tar.gz"

      - name: Upload To GH Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.build.outputs.release_name }}
          path: ${{ steps.build.outputs.artifact_path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  
